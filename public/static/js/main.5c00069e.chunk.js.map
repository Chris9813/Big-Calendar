{"version":3,"sources":["components/helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/iu.js","components/helpers/prepareEvents.js","actions/events.js","components/calendar/CalendarModa.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/router/PrivateRoute.js","components/router/PublicRoute.js","components/router/Approuter.js","reducers/authReducer.js","reducers/caledarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endPoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","clearData","useForm","initialState","useState","values","setvalues","reset","handleInnputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","console","log","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","prepareEvents","events","start","map","moment","ISO_8601","toDate","end","eventAddNew","eventClearActiveevent","eventUpdate","eventDeleted","eventLoadaded","CalendarModa","modalOpen","ui","activeEvent","calendar","Modal","setAppElement","now","minutes","seconds","add","nowEnd","clone","dateStart","setdateStart","dateEnd","setDateEnd","titleValid","setTitleValid","initiEvent","notes","formValues","setformValues","useEffect","handleInputChange","closeModal","isOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","contentLabel","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","id","getState","evento","_id","eventStartAddNew","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","display","color","components","onView","onDoubleClickEvent","onSelectEvent","view","onSelectSlot","selectable","PrivateRoute","isLoggedIn","Component","component","rest","location","pathname","props","to","PublicRoute","Approuter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c00069e.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = (endPoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endPoint}`; //localhost:4000/api/endpoint\r\n\r\n    if(method === 'GET') {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endPoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endPoint}`; //localhost:4000/api/endpoint\r\n    const token = localStorage.getItem('token') || \"\"\r\n\r\n    if(method === 'GET') {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token,\r\n            }\r\n        } );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}\r\n\r\n\r\n","\r\n\r\nexport const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Start clear logout',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdate: '[event] Event updted',\r\n    eventDelated: '[event] Event delated',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authFinishLogin: '[auth] Finish start login',\r\n    authStartRegister: '[auth] Register start',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Start logout',\r\n\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../components/helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n        console.log(body);\r\n        \r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            Swal.fire('error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', {name, email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            Swal.fire('error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startCheking = () => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchConToken('auth/renew', {}, 'GET');\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            dispatch(checkingFinish())\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n\r\n})\r\n\r\nconst login = (user) => ({\r\n    type: types.authStartLogin,\r\n    payload: user,\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(clearData());\r\n        dispatch(logout());\r\n        \r\n    }\r\n}\r\nconst logout = () => ({type: types.authLogout})\r\nconst clearData = () => ({type: types.eventLogout})\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setvalues] = useState(initialState)\r\n    const reset = () => {\r\n        setvalues(initialState)\r\n    }\r\n    const handleInnputChange = ({target}) => {\r\n        setvalues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        })\r\n    }\r\n\r\n    return [values, handleInnputChange, reset]\r\n\r\n} \r\n\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'Chrisis@gmail.com',\r\n        lPassword: '123456'\r\n    })\r\n    const {lEmail, lPassword} = formLoginValues;\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: 'Estebans',\r\n        rEmail: 'christi@gmail.com',\r\n        rPassword1: \"123456\",\r\n        rPassword2: \"123456\",\r\n    })\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword))\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\r\n        }\r\n        dispatch(startRegister(rName, rEmail, rPassword1))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mb-2\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value= {rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value= {rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value= {rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-2\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value= {rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch()\r\n    const {name} = useSelector(state => state.auth)\r\n    \r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark\">\r\n            <span className=\"navbar-brand mx-3\">\r\n                {name}\r\n            </span>\r\n            <button className=\"btn btn-outline-danger mx-3\"\r\n            onClick={handleLogout}\r\n            >\r\n                <i className='fas fa-sign-out-alt'></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\n\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title, user} = event\r\n    return (\r\n        <div>\r\n            <span>{title}</span>\r\n            <strong> - {user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({type: types.uiOpenModal});\r\nexport const uiCloseModal = () => ({type: types.uiCloseModal});","import moment from \"moment\";\r\n\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    console.log(\"eventos enviasdos por prepare events:\", events[0].start);\r\n    return events.map(e => ({\r\n        ...e,\r\n        start: moment(e.start, moment.ISO_8601).toDate(),\r\n        end: moment(e.end, moment.ISO_8601).toDate(),\r\n    }))\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../components/helpers/fetch\";\r\nimport { prepareEvents } from \"../components/helpers/prepareEvents\";\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const {uid, name} = getState().auth\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST')\r\n        const body = await resp.json();\r\n        \r\n        if (body.ok ) {\r\n            event.id = body.evento.id\r\n            event.user = {\r\n                _id: uid,\r\n                name: name,\r\n            }\r\n            console.log(event);\r\n            dispatch(eventAddNew(event))\r\n        }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event,\r\n});\r\n\r\nexport const setActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event,\r\n});\r\n\r\nexport const eventClearActiveevent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, \"PUT\")\r\n            const body = await resp.json();\r\n            if(body.ok) {\r\n                dispatch( eventUpdate(event) );\r\n                console.log(\"Llego hasta aqui\")\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            };\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        };\r\n    }\r\n}\r\n\r\nconst eventUpdate = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event,\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n        const {id} = getState().calendar.activeEvent\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, \"DELETE\")\r\n            const body = await resp.json();\r\n            if(body.ok) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            };\r\n        } catch (error) {\r\n            console.log(error);\r\n        };\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDelated,\r\n    \r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.eventos); \r\n            console.log(\"eventos recibidos por StartLoading:\", events);\r\n            dispatch(eventLoadaded(events))\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nconst eventLoadaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events,\r\n})","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal} from '../../actions/iu';\r\nimport { eventClearActiveevent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\nexport const CalendarModa = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);    \r\n    const {activeEvent} = useSelector(state => state.calendar); \r\n\r\n    Modal.setAppElement('#root');\r\n\r\n    const now = moment().minutes(0).seconds(0).add(1,\"hours\");\r\n    const nowEnd = now.clone().add(1,\"hours\");\r\n\r\n    const [ dateStart, setdateStart ] = useState(now.toDate());\r\n    const [ dateEnd, setDateEnd ] = useState(nowEnd.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const initiEvent = {\r\n        title: '',\r\n        notes: '',\r\n        start: now.toDate(),\r\n        end: nowEnd.toDate(),\r\n    }\r\n\r\n    const [formValues, setformValues] = useState(initiEvent);\r\n\r\n    const {notes, title, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if ( activeEvent ){\r\n            setformValues(activeEvent)\r\n        } else {\r\n            setformValues(initiEvent)\r\n        }\r\n    }, [activeEvent, setformValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setformValues({\r\n            ...formValues,\r\n            [target.name]: target.value,\r\n        })\r\n    }\r\n\r\n    const customStyles = {\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n        },\r\n    };\r\n    \r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveevent());\r\n        setformValues(initiEvent);\r\n    };  \r\n\r\n    const handleStartDateChange = (e) => {\r\n        setdateStart(e);\r\n        setformValues({\r\n            ...formValues,\r\n            start: e,\r\n        })\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e)\r\n        setformValues({\r\n            ...formValues,\r\n            end: e,\r\n        })\r\n    };\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment ( start );\r\n        const momentEnd = moment ( end );\r\n\r\n        if ( momentStart.isSameOrAfter(momentEnd) ) {\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n        };\r\n\r\n        if( title.trim().length < 2) {\r\n            return setTitleValid(false)\r\n        };\r\n\r\n        if(activeEvent) {\r\n            dispatch(eventStartUpdate(formValues))\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n        \r\n    };\r\n\r\n    return (\r\n    <div>\r\n    <Modal\r\n    isOpen={modalOpen}\r\n    //onAfterOpen={afterOpenModal}\r\n    onRequestClose={closeModal}\r\n    style={customStyles}\r\n    contentLabel=\"Example Modal\"\r\n    overlayClassName=\"modal-fondo\"\r\n    className=\"modal\"\r\n    closeTimeoutMS={200}\r\n    >\r\n\r\n    <h1> {(activeEvent) ? 'Editar Elemento'\r\n    : 'Nuevo Elemento'\r\n    } </h1>\r\n    <hr />\r\n\r\n    <form className=\"container\"\r\n    onSubmit={handleSubmitForm}\r\n    >\r\n    \r\n        <div className=\"form-group\">\r\n            <label>Fecha y hora inicio</label>\r\n\r\n            <div>\r\n            <DateTimePicker\r\n                onChange={handleStartDateChange}\r\n                value= { dateStart }\r\n                className=\"form-control mb-2\"\r\n            />\r\n            </div>\r\n\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label>Fecha y hora fin</label>\r\n\r\n            <div>\r\n            <DateTimePicker\r\n                onChange={handleEndDateChange}\r\n                value={ dateEnd }\r\n                className=\"form-control mb-2\"\r\n            />\r\n            </div>\r\n\r\n        </div>\r\n        <hr />\r\n        <div className=\"form-group\">\r\n            <label>Titulo y notas</label>\r\n            <input \r\n                type=\"text\" \r\n                className={`form-control ${!titleValid && 'is-invalid'}`} //CLase condicional\r\n                placeholder=\"Título del evento\"\r\n                name=\"title\"\r\n                autoComplete=\"off\"\r\n                value={title}\r\n                onChange={handleInputChange}\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <textarea \r\n                type=\"text\" \r\n                className=\"form-control\"\r\n                placeholder=\"Notas\"\r\n                rows=\"5\"\r\n                name=\"notes\"\r\n                value={notes}\r\n                onChange={handleInputChange}\r\n            ></textarea>\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n        </div>\r\n        <button\r\n            type=\"submit\"\r\n            className=\"btn btn-outline-primary btn-block\"\r\n        >\r\n            <i className=\"far fa-save\"></i>\r\n            <span> Guardar</span>\r\n        </button>\r\n    </form>\r\n\r\n</Modal>\r\n</div>\r\n)};\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/iu'\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal())\r\n    };\r\n\r\n    return (\r\n        <button\r\n        className='btn btn-primary fab mx-3 end-0'\r\n        onClick= {handleClickNew}\r\n        >\r\n            <i className='fas fa-plus'></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    };\r\n\r\n    return (\r\n        <button\r\n        className='btn btn-danger fab-danger'\r\n        onClick= {handleDelete}\r\n        >\r\n        <i className='fas fa-trash'></i>\r\n        <span> Borrar evento</span>\r\n        </button>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { messages } from '../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModa } from './CalendarModa';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/iu';\r\nimport { eventClearActiveevent, eventStartLoading, setActive } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    \r\n\r\n    const {uid} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n\r\n    const [lastView, setlastView] = useState(localStorage.getItem(\"lastView\") || 'month');\r\n    \r\n    useEffect(() => {\r\n        dispatch( eventStartLoading())\r\n        console.log('me dispare');\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('events', JSON.stringify(events));\r\n    }, [events])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal())\r\n    };\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(setActive(e));\r\n    };\r\n\r\n    const onViewChange = (e) => {\r\n        setlastView(e);\r\n        localStorage.setItem(\"lastView\", e);\r\n    };\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveevent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end , isSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            display: 'block',\r\n            color: 'white',\r\n        }\r\n        return{\r\n            style\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n                <Navbar />\r\n                <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CalendarEvent,\r\n                }}\r\n                onView={onViewChange}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                view={lastView}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                />\r\n            \r\n            <AddNewFab />\r\n            {\r\n                activeEvent  && <DeleteEventFab /> \r\n            }\r\n            \r\n            <CalendarModa />\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    console.log(rest.location.pathname);\r\n    localStorage.setItem(\"lastPath\", rest.location.pathname)\r\n    return (\r\n        <div>\r\n            <Route {...rest}\r\n            component = {\r\n                (props) => (\r\n                    (isLoggedIn)\r\n                    ? (<Component {...props} />)\r\n                    :(<Redirect to=\"/login\" />)\r\n                )\r\n            }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes= {\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n    return (\r\n        <div>\r\n            <Route {...rest}\r\n            component = {\r\n                (props) => (\r\n                    (!isLoggedIn)\r\n                    ? (<Component {...props} />)\r\n                    :(<Redirect to=\"/\" />)\r\n                )\r\n            }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes= {\r\n    component: PropTypes.func.isRequired,\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { startCheking } from '../../actions/auth';\r\nimport { LoginScreen } from '../auth/LoginScreen';\r\nimport { CalendarScreen } from '../calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n\r\nexport const Approuter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch( startCheking() );\r\n    }, [dispatch])\r\n    \r\n    if ( checking ) {\r\n        return <h1>Espere...</h1>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute exact path=\"/login\" component={LoginScreen}\r\n                        isLoggedIn={!!uid}\r\n                        />\r\n                        <PrivateRoute exact path=\"/\" component={CalendarScreen}\r\n                        isLoggedIn={!!uid}\r\n                        />\r\n                        <Redirect to='/' />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    //uid: null,\r\n    //name: null,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogout:\r\n                return {\r\n                    checking: false,\r\n                }\r\n\r\n        case types.authStartLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            };\r\n        \r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\n\r\n","import moment from \"moment\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    \r\n    switch (action.type) {\r\n        case types.eventSetActive: \r\n        return {\r\n            ...state,\r\n            activeEvent: action.payload,\r\n        }\r\n\r\n        case types.eventAddNew: \r\n        return {\r\n            ...state,\r\n            events: [\r\n                ...state.events,\r\n                action.payload\r\n            ]\r\n        };\r\n\r\n        case types.eventClearActiveEvent: \r\n        return {\r\n            ...state,\r\n            activeEvent: null,\r\n        };\r\n\r\n        case types.eventLoaded: \r\n        return {\r\n            ...state,\r\n            events: [...action.payload]\r\n        };\r\n\r\n        case types.eventUpdate: \r\n        return {\r\n            ...state,\r\n            events: state.events.map(\r\n                e => (e.id === action.payload.id) ? action.payload : e\r\n            )\r\n        };\r\n\r\n        case types.eventDelated: \r\n        return {\r\n            ...state,\r\n            events: state.events.filter(\r\n                e => (e.id !== state.activeEvent.id)\r\n            ),\r\n            activeEvent: null,\r\n        };\r\n\r\n        case types.eventLogout: \r\n            return {\r\n                ...initialState,\r\n            }\r\n        \r\n        default:\r\n            return state;\r\n    };\r\n};","import {types} from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            \r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            };\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n\r\n};","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./caledarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n});\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducers\";\r\n\r\n\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    ),\r\n);","import React from 'react'\r\nimport { Approuter } from './components/router/Approuter'\r\nimport {Provider} from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store = {store}>\r\n                <Approuter />\r\n            </Provider>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}