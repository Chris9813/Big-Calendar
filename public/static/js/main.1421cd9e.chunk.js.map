{"version":3,"sources":["components/helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","App.js","components/ui/Navbar.js","components/helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/iu.js","components/helpers/prepareEvents.js","actions/events.js","components/calendar/CalendarModa.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/router/PrivateRoute.js","components/router/PublicRoute.js","components/router/Approuter.js","reducers/authReducer.js","reducers/caledarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endPoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","checkingFinish","type","login","user","payload","logout","clearData","useForm","initialState","useState","values","setvalues","reset","handleInnputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","App","checked","setChecked","useEffect","document","getElementsByTagName","setAttribute","class","role","id","defaultChecked","for","Navbar","useSelector","state","auth","onClick","clear","messages","allDay","previous","next","today","month","week","day","agenda","date","time","event","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","prepareEvents","events","map","start","moment","toDate","end","eventAddNew","eventClearActiveevent","eventUpdate","eventDeleted","eventLoadaded","CalendarModa","Modal","setAppElement","modalOpen","ui","calendar","activeEvent","startDate","endDate","now","minutes","seconds","add","nowEnd","clone","dateStart","setdateStart","dateEnd","setDateEnd","titleValid","setTitleValid","initiEvent","notes","formValues","setformValues","console","log","handleInputChange","closeModal","isOpen","onRequestClose","style","content","top","left","right","bottom","marginRight","transform","contentLabel","overlayClassName","closeTimeoutMS","ariaHideApp","momentStart","momentEnd","isSameOrAfter","trim","length","getState","evento","_id","eventStartAddNew","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","display","color","components","onView","onSelecting","ini","fin","onDoubleClickEvent","onSelectEvent","view","onSelectSlot","selectable","defaultView","PrivateRoute","isLoggedIn","Component","component","rest","location","pathname","props","to","PublicRoute","Approuter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1421cd9e.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nconst fetchSinToken = (endPoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endPoint}`; //localhost:4000/api/endpoint\r\n\r\n    if(method === 'GET') {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endPoint, data, method = 'GET') => {\r\n\r\n    const url = `${baseUrl}/${endPoint}`; //localhost:4000/api/endpoint\r\n    const token = localStorage.getItem('token') || \"\"\r\n\r\n    if(method === 'GET') {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token,\r\n            }\r\n        } );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}\r\n\r\n\r\n","\r\n\r\nexport const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n    eventOpenModalWith: '[event] Open modal With',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Start clear logout',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdate: '[event] Event updted',\r\n    eventDelated: '[event] Event delated',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authFinishLogin: '[auth] Finish start login',\r\n    authStartRegister: '[auth] Register start',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Start logout',\r\n    \r\n\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../components/helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', {email, password}, 'POST');\r\n        const body = await resp.json();\r\n        \r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            Swal.fire('error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async(dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', {name, email, password}, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            Swal.fire('error', body.msg, 'error')\r\n        }\r\n    }\r\n}\r\n\r\nexport const startCheking = () => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchConToken('auth/renew', {}, 'GET');\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name,\r\n            }));\r\n        } else {\r\n            dispatch(checkingFinish())\r\n        }\r\n    }\r\n}\r\n\r\nexport const checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n\r\n})\r\n\r\nexport const login = (user) => ({\r\n    type: types.authStartLogin,\r\n    payload: user,\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(clearData());\r\n        dispatch(logout());\r\n        \r\n    }\r\n}\r\nconst logout = () => ({type: types.authLogout})\r\nconst clearData = () => ({type: types.eventLogout})\r\n","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setvalues] = useState(initialState)\r\n    const reset = () => {\r\n        setvalues(initialState)\r\n    }\r\n    const handleInnputChange = ({target}) => {\r\n        setvalues({\r\n            ...values,\r\n            [target.name]: target.value,\r\n        })\r\n    }\r\n\r\n    return [values, handleInnputChange, reset]\r\n\r\n} \r\n\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    })\r\n    const {lEmail, lPassword} = formLoginValues;\r\n\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rName: '',\r\n        rEmail: '',\r\n        rPassword1: \"\",\r\n        rPassword2: \"\",\r\n    })\r\n    const {rName, rEmail, rPassword1, rPassword2} = formRegisterValues;\r\n\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword))\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if ( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\r\n        }\r\n        dispatch(startRegister(rName, rEmail, rPassword1))\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mb-2\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n\r\n                    <span className=\".p-login\">\r\n                    Tambien puedes entrar como invitado. correo: invitado@inv.com  contraseña: 123456\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value= {rName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value= {rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mb-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value= {rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-2\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value= {rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport \"./styles/styleCalendar.css\"\r\n\r\nconst App = () => {\r\n\r\n    const [checked, setChecked] = useState(\r\n    localStorage.getItem(\"theme\") === \"dark\" ? true : false\r\n);\r\n\r\n\r\nuseEffect(() => {\r\n    document\r\n    .getElementsByTagName(\"HTML\")[0]\r\n    .setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\r\n}, [!checked]);\r\n\r\n\r\nconst toggleThemeChange = () => {\r\n    if (checked === false) {\r\n    localStorage.setItem(\"theme\", \"dark\");\r\n    setChecked(true);\r\n    } else {\r\n    localStorage.setItem(\"theme\", \"light\");\r\n    setChecked(false);\r\n    }\r\n};\r\n\r\nreturn (\r\n    <div >\r\n    <header>\r\n    <p>Click para cambiar el tema</p>\r\n\r\n    <div class=\"form-check form-switch\">\r\n    <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"\r\n    defaultChecked={checked}\r\n    onChange={() => toggleThemeChange()}\r\n/>\r\n<label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">Default switch checkbox input</label>\r\n</div>\r\n\r\n    </header>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default App;","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport App from '../../App'\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch()\r\n    const {name} = useSelector(state => state.auth)\r\n    \r\n    const handleLogout = () => {\r\n        dispatch(startLogout())\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark\">\r\n            <span className=\"navbar-brand mx-3\">\r\n                {name}\r\n            </span>\r\n            <App />\r\n            <button className=\"btn btn-outline-danger mx-3\"\r\n            onClick={handleLogout}\r\n            >\r\n                <i className='fas fa-sign-out-alt'></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\n\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title, user} = event\r\n    return (\r\n        <div>\r\n            <span>{title}</span>\r\n            <strong> - {user.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({type: types.uiOpenModal});\r\nexport const uiCloseModal = () => ({type: types.uiCloseModal});\r\n","import moment from \"moment\";\r\n\r\n\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map(e => ({\r\n        ...e,\r\n        start: moment(e.start).toDate(),\r\n        end: moment(e.end).toDate(),\r\n    }))\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../components/helpers/fetch\";\r\nimport { prepareEvents } from \"../components/helpers/prepareEvents\";\r\nimport { types } from \"../types/types\"\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const {uid, name} = getState().auth\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST')\r\n        const body = await resp.json();\r\n        \r\n        if (body.ok ) {\r\n            event.id = body.evento.id\r\n            event.user = {\r\n                _id: uid,\r\n                name: name,\r\n            }\r\n            console.log(event);\r\n            dispatch(eventAddNew(event))\r\n        }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event,\r\n});\r\n\r\nexport const setActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event,\r\n});\r\n\r\nexport const eventClearActiveevent = () => ({\r\n    type: types.eventClearActiveEvent\r\n});\r\n\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, \"PUT\")\r\n            const body = await resp.json();\r\n            if(body.ok) {\r\n                dispatch( eventUpdate(event) );\r\n                console.log(\"Llego hasta aqui\")\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            };\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        };\r\n    }\r\n}\r\n\r\nconst eventUpdate = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event,\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n        const {id} = getState().calendar.activeEvent\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, \"DELETE\")\r\n            const body = await resp.json();\r\n            if(body.ok) {\r\n                dispatch( eventDeleted() );\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            };\r\n        } catch (error) {\r\n            console.log(error);\r\n        };\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDelated,\r\n    \r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.eventos); \r\n            dispatch(eventLoadaded(events))\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\nexport const eventSetDate = (start, end) => ({\r\n    type: types.eventOpenModalWith,\r\n    payload: {\r\n        start: start,\r\n        end: end,\r\n    }\r\n});\r\n\r\nconst eventLoadaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events,\r\n})","import moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal} from '../../actions/iu';\r\nimport { eventClearActiveevent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\n\r\n\r\nexport const CalendarModa = () => {\r\n\r\n    if(process.env.NODE_ENV !== 'test'){\r\n        Modal.setAppElement('#root');\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);    \r\n    const {activeEvent, startDate, endDate} = useSelector(state => state.calendar); \r\n\r\n    let now = moment().minutes(0).seconds(0).add(1,\"hours\")\r\n    let nowEnd =  now.clone().add(1,\"hours\")\r\n\r\n\r\n    /*else {\r\n        now = moment().minutes(0).seconds(0).add(1,\"hours\")\r\n        nowEnd = now.clone().add(1,\"hours\")\r\n    }*/\r\n\r\n    \r\n\r\n    const [ dateStart, setdateStart ] = useState(startDate || now.toDate());\r\n    const [ dateEnd, setDateEnd ] = useState(endDate || nowEnd.toDate());\r\n    \r\n    \r\n\r\n\r\n\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n\r\n    const initiEvent = {\r\n        title: '',\r\n        notes: '',\r\n        start: dateStart,\r\n        end: dateEnd,\r\n    }\r\n\r\n    const [formValues, setformValues] = useState(initiEvent);\r\n\r\n    const {notes, title, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if ( activeEvent ){\r\n            setformValues(activeEvent)\r\n            setdateStart(activeEvent.start)\r\n            setDateEnd(activeEvent.end)\r\n            console.log(activeEvent.start);\r\n        } \r\n        \r\n        else {\r\n            setformValues(initiEvent)\r\n            console.log(formValues);\r\n        }\r\n        \r\n    }, [activeEvent, setformValues, dateStart])\r\n\r\n    useEffect(() => {\r\n        if(startDate){\r\n            setdateStart(startDate)\r\n            setDateEnd(endDate)\r\n        } else {\r\n            setdateStart(now.toDate())\r\n            setDateEnd(nowEnd.toDate())\r\n        }\r\n        \r\n    }, [startDate, endDate, setdateStart, setDateEnd])\r\n\r\n\r\n    useEffect(() => {\r\n        if(startDate){\r\n        setdateStart(startDate);\r\n        setformValues({\r\n            ...formValues,\r\n            start: startDate,\r\n        })\r\n        }\r\n        \r\n        if(endDate){\r\n            setDateEnd(endDate);\r\n        setformValues({\r\n            ...formValues,\r\n            end: endDate,\r\n        })\r\n        }\r\n    }, [startDate, endDate])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setformValues({\r\n            ...formValues,\r\n            [target.name]: target.value,\r\n        })\r\n    }\r\n\r\n    const customStyles = {\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n        },\r\n    };\r\n    \r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveevent());\r\n        setformValues(initiEvent);\r\n    };  \r\n\r\n    const handleStartDateChange = (e) => {\r\n        setdateStart(e);\r\n        setformValues({\r\n            ...formValues,\r\n            start: e,\r\n        })\r\n        console.log(formValues);\r\n    };\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e)\r\n        setformValues({\r\n            ...formValues,\r\n            end: e,\r\n        })\r\n    };\r\n\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment ( start );\r\n        const momentEnd = moment ( end );\r\n\r\n        console.log(momentStart, startDate);\r\n\r\n\r\n        if ( momentStart.isSameOrAfter(momentEnd) ) {\r\n            return Swal.fire('Error', 'La fecha fin debe ser mayor a la fecha de inicio', 'error');\r\n        };\r\n\r\n        if( title.trim().length < 2) {\r\n            return setTitleValid(false)\r\n        };\r\n\r\n        if(activeEvent) {\r\n            dispatch(eventStartUpdate(formValues))\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n        \r\n        setTitleValid(true);\r\n        closeModal();\r\n    };\r\n\r\n\r\n    return (\r\n    <div>\r\n    <Modal\r\n    isOpen={modalOpen}\r\n    //onAfterOpen={afterOpenModal}\r\n    onRequestClose={closeModal}\r\n    style={customStyles}\r\n    contentLabel=\"Example Modal\"\r\n    overlayClassName=\"modal-fondo\"\r\n    className=\"modal\"\r\n    closeTimeoutMS={200}\r\n    ariaHideApp={ !process.env.NODE_ENV === 'test' }\r\n    >\r\n\r\n    <h1> {(activeEvent) ? 'Editar Elemento'\r\n    : 'Nuevo Elemento'\r\n    } </h1>\r\n    <hr />\r\n\r\n    <form className=\"container\"\r\n    onSubmit={handleSubmitForm}\r\n    >\r\n    \r\n        <div className=\"form-group\">\r\n            <label>Fecha y hora inicio</label>\r\n            <div>\r\n            <DateTimePicker\r\n                onChange={handleStartDateChange}\r\n                value= { dateStart }\r\n                className=\"form-control mb-2\"\r\n            />\r\n            </div>\r\n\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <label>Fecha y hora fin</label>\r\n\r\n            <div>\r\n            <DateTimePicker\r\n                onChange={handleEndDateChange}\r\n                value={ dateEnd }\r\n                className=\"form-control mb-2\"\r\n            />\r\n            </div>\r\n\r\n        </div>\r\n        <hr />\r\n        <div className=\"form-group\">\r\n            <label>Titulo y notas</label>\r\n            <input \r\n                type=\"text\" \r\n                className={`form-control ${!titleValid && 'is-invalid'}`} //CLase condicional\r\n                placeholder=\"Título del evento\"\r\n                name=\"title\"\r\n                autoComplete=\"off\"\r\n                value={title}\r\n                onChange={handleInputChange}\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n            <textarea \r\n                type=\"text\" \r\n                className=\"form-control\"\r\n                placeholder=\"Notas\"\r\n                rows=\"5\"\r\n                name=\"notes\"\r\n                value={notes}\r\n                onChange={handleInputChange}\r\n            ></textarea>\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n        </div>\r\n        <button\r\n            type=\"submit\"\r\n            className=\"btn btn-outline-primary btn-block\"\r\n        >\r\n            <i className=\"far fa-save\"></i>\r\n            <span> Guardar</span>\r\n        </button>\r\n    </form>\r\n\r\n</Modal>\r\n</div>\r\n)};\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/iu'\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClickNew = () => {\r\n        dispatch(uiOpenModal())\r\n    };\r\n\r\n    return (\r\n        <button\r\n        className='btn btn-primary fab mx-3 end-0'\r\n        onClick= {handleClickNew}\r\n        >\r\n            <i className='fas fa-plus'></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    };\r\n\r\n    return (\r\n        <button\r\n        className='btn btn-danger fab-danger'\r\n        onClick= {handleDelete}\r\n        >\r\n        <i className='fas fa-trash'></i>\r\n        <span> Borrar evento</span>\r\n        </button>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es'\r\nimport { messages } from '../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModa } from './CalendarModa';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/iu';\r\nimport { eventClearActiveevent, eventSetDate, eventStartLoading, setActive } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const {uid} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n\r\n    const {events, activeEvent} = useSelector(state => state.calendar)\r\n\r\n    const [lastView, setlastView] = useState(localStorage.getItem(\"lastView\") || 'month');\r\n    \r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('events', JSON.stringify(events));\r\n    }, [events])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal())\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        const ini = moment(e.start).toDate();\r\n        const fin = moment(e.end).toDate();\r\n        dispatch(uiOpenModal())\r\n        dispatch(eventSetDate(ini, fin))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch( eventStartLoading())\r\n    }, [dispatch])\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(setActive(e));\r\n    };\r\n\r\n    const onViewChange = (e) => {\r\n        setlastView(e);\r\n        localStorage.setItem(\"lastView\", e);\r\n    };\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActiveevent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end , isSelected) => ({\r\n        className: \"dark\",\r\n        style: {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '2px',\r\n            display: 'block',\r\n            color: 'white',\r\n        }\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n                <Navbar />\r\n                <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{\r\n                    event: CalendarEvent,\r\n                }}\r\n                onView={onViewChange}\r\n                onSelecting={handleClick}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                view={lastView}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                defaultView=\"day\"\r\n                />\r\n            \r\n            <AddNewFab />\r\n            {\r\n                activeEvent  && <DeleteEventFab /> \r\n            }\r\n            \r\n            <CalendarModa />\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    console.log(rest.location.pathname);\r\n    localStorage.setItem(\"lastPath\", rest.location.pathname)\r\n    return (\r\n        <div>\r\n            <Route {...rest}\r\n            component = {\r\n                (props) => (\r\n                    (isLoggedIn)\r\n                    ? (<Component {...props} />)\r\n                    :(<Redirect to=\"/login\" />)\r\n                )\r\n            }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes= {\r\n    component: PropTypes.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest\r\n\r\n}) => {\r\n    return (\r\n        <div>\r\n            <Route {...rest}\r\n            component = {\r\n                (props) => (\r\n                    (!isLoggedIn)\r\n                    ? (<Component {...props} />)\r\n                    :(<Redirect to=\"/\" />)\r\n                )\r\n            }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes= {\r\n    component: PropTypes.func.isRequired,\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport { startCheking } from '../../actions/auth';\r\nimport { LoginScreen } from '../auth/LoginScreen';\r\nimport { CalendarScreen } from '../calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\n\r\nexport const Approuter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch( startCheking() );\r\n    }, [dispatch])\r\n    \r\n    if ( checking ) {\r\n        return <h1>Espere...</h1>\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute exact path=\"/login\" component={LoginScreen}\r\n                        isLoggedIn={!!uid}\r\n                        />\r\n                        <PrivateRoute exact path=\"/\" component={CalendarScreen}\r\n                        isLoggedIn={!!uid}\r\n                        />\r\n                        <Redirect to='/' />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    //uid: null,\r\n    //name: null,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case types.authLogout:\r\n                return {\r\n                    checking: false,\r\n                }\r\n\r\n        case types.authStartLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            };\r\n        \r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\n\r\n","\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null,\r\n    startDate: null,\r\n    endDate: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n\r\n    \r\n    switch (action.type) {\r\n        case types.eventSetActive: \r\n        return {\r\n            ...state,\r\n            activeEvent: action.payload,\r\n        }\r\n\r\n        case types.eventAddNew: \r\n        return {\r\n            ...state,\r\n            events: [\r\n                ...state.events,\r\n                action.payload\r\n            ]\r\n        };\r\n\r\n        case types.eventClearActiveEvent: \r\n        return {\r\n            ...state,\r\n            activeEvent: null,\r\n            startDate: null,\r\n            endDate: null,\r\n        };\r\n\r\n        case types.eventLoaded: \r\n        return {\r\n            ...state,\r\n            events: [...action.payload]\r\n        };\r\n\r\n        case types.eventUpdate: \r\n        return {\r\n            ...state,\r\n            events: state.events.map(\r\n                e => (e.id === action.payload.id) ? action.payload : e\r\n            )\r\n        };\r\n\r\n        case types.eventDelated: \r\n        return {\r\n            ...state,\r\n            events: state.events.filter(\r\n                e => (e.id !== state.activeEvent.id)\r\n            ),\r\n            activeEvent: null,\r\n        };\r\n\r\n        case types.eventLogout: \r\n            return {\r\n                ...initialState,\r\n            }\r\n        \r\n        case types.eventOpenModalWith: \r\n            return {\r\n                ...state,\r\n                startDate: action.payload.start,\r\n                endDate: action.payload.end,\r\n            }\r\n        default:\r\n            return state;\r\n    };\r\n};","import {types} from '../types/types';\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            \r\n            return {\r\n                ...state,\r\n                modalOpen: true,\r\n            };\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    };\r\n\r\n};","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./caledarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer,\r\n});\r\n\r\n\r\n\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducers\";\r\n\r\n\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    ),\r\n);","import React from 'react'\r\nimport { Approuter } from './components/router/Approuter'\r\nimport {Provider} from 'react-redux'\r\nimport { store } from './store/store'\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store = {store}>\r\n                <Approuter />\r\n            </Provider>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n//import \"react-big-calendar/lib/css/react-big-calendar.css\";\n//import \"./styles/styles.scss\"\nimport \"./styles/styleCalendar.css\"\n\n\n\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}